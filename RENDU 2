Nouvel ISA : http://perso.citi-lab.fr/fdedinec/enseignement/2017/ASR1/isa2017v2.pdf

Rendu 2 : http://perso.citi-lab.fr/fdedinec/enseignement/2017/ASR1/DM.pdf

->>>>done Implémenter toute les instructions
->>>>done Implémenter les labels et saut sur label (opti ou pas)
->>>>done clear_screen (r0)
->> demander de l'aide pour l'histoire des constantes signées + vérifier que readse a un sens #Sebastien t'a répondu
->>>> done plot (r1, r2) en r0
->>bug fill : rectangle en r0 de (r1,r2) à (r3, r4) #to test
->>bug draw : ligne en r0 (r1,r2) à (r3, r4) #to test
->>>>done trouver caractères 8x8 #https://github.com/dhepper/font8x8
- les importers dans le processeur direct?
- putchar : code ascii en r3, lettre 8x8 en (r1, r2)
- Afficher une droite, un rectangle et nos initials.
- peut-être refaire quelque truc pour pas utiliser counter[] si y a vraiment besoin
->> vérifier comment faire les couleurs usuelles rgb: #Sur les 16 bits les 6 premiers pour le rouge, les 5 suivants pour le vert, les 5 autres pour le bleu
#Tu me diras si tu comprends pareil

- futur :
- voir meilleur moyen de faire des fonctions, peut-être que asm.py pourrait transformer "call plot 3 4" en 
let r0 3
let r1 4
call plot

fin ça serait marrant de faire un pré-assembleur hmm.


fin rendu 2.
